@page "/users"
@inject UserServices UserServices
@inject NavigationManager NavigationManager

<MudButton OnClick="@(()=>_isAdd=!_isAdd)" Variant="Variant.Filled" Color="Color.Primary">Thêm</MudButton>
@if (_isAdd)
{
    <div style="max-width: 400px;">
        <EditForm Model="@User" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Name" HelperText="Max. 8 characters"
                                  @bind-Value="User.Name" For="@(() => User.Name)" />
                    <MudTextField Label="Email" Class="mt-3"
                                  @bind-Value="User.Email" For="@(() => User.Email)" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Thêm</MudButton>
                </MudCardActions>
            </MudCard>
        </EditForm>
    </div>
}
else
{
    <MudTable Items="@Users" Filter="new Func<User,bool>(FilterFunc)">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Periodic Elements</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Id</MudTh>
            <MudTh>Created At</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Email</MudTh>
            <MudTh>Link</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Link">@context.Id</MudTd>
            <MudTd DataLabel="createdAt">@context.CreatedAt</MudTd>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Email">@context.Email</MudTd>
            <MudTd DataLabel="Link"><MudButton OnClick="@(()=>NavigationManager.NavigateTo("/link/"+context.Id))">Link</MudButton></MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
}


@code {
    List<User> Users = new List<User>();
    private bool _isAdd = false;
    private string searchString = "";
    User User = new User();


    private bool FilterFunc(User element)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Email.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }
    private async Task OnValidSubmit(EditContext context)
    {
        await UserServices.AddAsync(User);
        Users.Add(User);
        _isAdd = false;
    }
    protected async override Task OnInitializedAsync()
    {
        Users = await UserServices.GetAllAsync();
    }
}
